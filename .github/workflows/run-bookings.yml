name: Run Bookings

on:
  schedule:
    # Fire ~14 min early (EDT). In winter (EST) bump each hour by +1 UTC.
    - cron: "45 20 * * *"   # 4:45 PM Montreal (EDT)
    - cron: "45 21 * * *"   # 5:45 PM Montreal (EDT)
    - cron: "45 22 * * *"   # 6:45 PM Montreal (EDT)
    - cron: "45 23 * * *"   # 7:45 PM Montreal (EDT)
  workflow_dispatch:

jobs:
  run-bookings:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Per-matrix-script concurrency; separate manual vs schedule
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}-${{ matrix.script }}
      cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

    strategy:
      fail-fast: false
      matrix:
        script: [final_booking_tommy.py, final_booking_sylvia.py, final_booking_ricky.py, final_booking__calvin.py]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Show pip cache status
        run: du -sh ~/.cache/pip || echo "No pip cache restored"

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright
          restore-keys: |
            ${{ runner.os }}-playwright

      - name: Show Playwright cache status
        run: du -sh ~/.cache/ms-playwright || echo "No Playwright cache restored"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Browsers
        run: playwright install --with-deps chromium

      # ðŸ”’ Sleep until EXACT :59:00 local, then proceed
      - name: Gate until exact :00:00 local (America/Toronto)
        env:
          TZ: America/Toronto
          TARGET_MINUTE: "00"
          MAX_LATE_SECONDS: "90"   # exit neutral if we woke too late
        run: |
          set -euo pipefail
          export TZ=America/Toronto

          now_epoch=$(date +%s)
          now_h=$(date +%H)
          target_epoch=$(date -d "today ${now_h}:${TARGET_MINUTE}:00" +%s)

          # If already past :59 for this hour (e.g., trigger jitter), exit neutral
          if [ "$now_epoch" -gt "$target_epoch" ]; then
            echo "Already past :${TARGET_MINUTE} for local hour ${now_h}. Exiting."
            exit 78
          fi

          sleep_s=$(( target_epoch - now_epoch ))
          echo "Sleeping ${sleep_s}s until $(date -d "@$target_epoch") (${TZ})"
          sleep "$sleep_s"

          lag=$(( $(date +%s) - target_epoch ))
          echo "Lag after wake: ${lag}s"
          if [ "$lag" -gt "${MAX_LATE_SECONDS}" ]; then
            echo "Too late (> ${MAX_LATE_SECONDS}s). Exiting without booking."
            exit 78
          fi

      - name: Run booking script
        env:
          HEADLESS: "true"
          PYTHONUNBUFFERED: "1"
          TZ: America/Toronto
        run: python -u ${{ matrix.script }}
